import asyncio
import logging
from parsers.adidas_scraper import parse_adidas
from parsers.lamoda_scraper import parse_lamoda
from parsers.fg_group_scraper import parse_fg_group
from utils.json_utils import save_to_json, save_to_db

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")

async def run_scrapers():
    logging.info("üîÑ –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–æ–≤...")

    tasks = [
        asyncio.to_thread(parse_adidas),
        asyncio.to_thread(parse_lamoda),
        asyncio.to_thread(parse_fg_group),
    ]

    results = await asyncio.gather(*tasks)

    # –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
    all_data = []
    for data in results:
        if data:
            all_data.extend(data)

    if all_data:
        save_to_json(all_data)
        logging.info("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ JSON.")
        save_to_db(all_data)
        logging.info("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ SQLite –ë–î.")
    else:
        logging.warning("‚ö† –ü–∞—Ä—Å–µ—Ä—ã –Ω–µ —Å–æ–±—Ä–∞–ª–∏ –¥–∞–Ω–Ω—ã–µ!")

if __name__ == "__main__":
    asyncio.run(run_scrapers())
